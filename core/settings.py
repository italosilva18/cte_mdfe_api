"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2. # Na verdade, seu requirements mostra Django 4.2.20

For more information on this file, see
https://docs.djangoproject.com/en/{{ docs_version }}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{ docs_version }}/ref/settings/
"""

from pathlib import Path
from datetime import timedelta # Adicionado para SIMPLE_JWT

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/{{ docs_version }}/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l^c_9bjw%s*se1_c$m886y*7&40w9)sznzfdca^4biq0a^r*x1' # Mantenha uma chave segura e secreta em produção

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Mude para False em produção

ALLOWED_HOSTS = [] # Em produção, adicione seus domínios aqui (ex: ['meusite.com', 'www.meusite.com'])
                    # Se DEBUG=True e ALLOWED_HOSTS estiver vazio, Django permite 'localhost', '127.0.0.1'.


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    # 'rest_framework.authtoken', # Você está usando SimpleJWT, então authtoken não é estritamente necessário
                                # a menos que alguma outra lib dependa dele.
    'drf_yasg',
    'transport', # Sua aplicação principal
    "rest_framework_simplejwt",
    'rest_framework_simplejwt.token_blacklist', # Adicionado para melhor gerenciamento de tokens (opcional, mas recomendado se você rotaciona refresh tokens)
    'corsheaders', # Adicionado para Cross-Origin Resource Sharing
    'django.contrib.humanize', # Para filtros de template como intcomma, apnumber, etc. (você tinha no dashboard.html)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Adicionado - geralmente vem antes de CommonMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL Configuration
ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Adicione se tiver templates globais, embora os seus estejam em 'transport/templates'
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # Adicionado para variáveis de debug
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Configurações do Django REST Framework
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # SessionAuthentication é útil para o Browsable API e para o Admin do Django
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        # Por padrão, exige autenticação para todas as views da API.
        # Você pode sobrescrever isso por view se precisar de endpoints públicos.
        "rest_framework.permissions.IsAuthenticated",
    ),
    "DEFAULT_RENDERER_CLASSES": (
        "rest_framework.renderers.JSONRenderer",
        # BrowsableAPIRenderer é o que permite visualizar a API no navegador
        "rest_framework.renderers.BrowsableAPIRenderer",
    ),
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10, # Define um tamanho de página padrão para listagens
}

# Configurações do Simple JWT
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60), # Aumentado para 1 hora (ajuste conforme necessidade)
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True, # Emite um novo refresh token quando um antigo é usado
    "BLACKLIST_AFTER_ROTATION": True, # Adiciona o refresh token antigo à blacklist
    "UPDATE_LAST_LOGIN": True, # Atualiza o campo last_login do usuário

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY, # Reutiliza a SECRET_KEY do Django (mantenha-a segura!)
    "VERIFYING_KEY": "", # Não necessário para HS256
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",), # O auth.js envia 'Bearer <token>'
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
}

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# settings.py
# Configurações de arquivos estáticos
STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'transport/static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Configuração de arquivos de mídia
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Adicione estas linhas ao final do arquivo
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/dashboard/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

