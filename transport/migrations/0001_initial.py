# Generated by Django 5.2.2 on 2025-06-07 12:28

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertaSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prioridade', models.CharField(choices=[('alta', 'Alta'), ('media', 'Média'), ('baixa', 'Baixa')], max_length=10)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('tipo', models.CharField(blank=True, max_length=60)),
                ('mensagem', models.TextField()),
                ('dados_adicionais', models.JSONField(blank=True, null=True)),
                ('modulo', models.CharField(blank=True, max_length=60)),
                ('usuario', models.CharField(blank=True, max_length=60)),
                ('referencia', models.CharField(blank=True, max_length=60)),
            ],
            options={
                'verbose_name': 'Alerta do Sistema',
                'verbose_name_plural': 'Alertas do Sistema',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=120, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nome Fantasia')),
                ('cnpj', models.CharField(max_length=14, unique=True, verbose_name='CNPJ')),
                ('ie', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('rntrc', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('cep', models.CharField(blank=True, max_length=8, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=60, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=60, null=True, verbose_name='Bairro')),
                ('municipio', models.CharField(blank=True, max_length=60, null=True, verbose_name='Município')),
                ('uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', verbose_name='Logotipo')),
                ('certificado_digital', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certificado A1 (Nome)')),
                ('responsavel_tecnico_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Responsável Técnico')),
                ('responsavel_tecnico_contato', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Responsável Técnico')),
                ('responsavel_tecnico_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Responsável Técnico')),
                ('responsavel_tecnico_fone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone Responsável Técnico')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração da Empresa',
                'verbose_name_plural': 'Configuração da Empresa',
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(blank=True, max_length=60, null=True)),
                ('numero', models.CharField(blank=True, max_length=20, null=True)),
                ('complemento', models.CharField(blank=True, max_length=60, null=True)),
                ('bairro', models.CharField(blank=True, max_length=60, null=True)),
                ('codigo_municipio', models.CharField(blank=True, max_length=7, null=True)),
                ('nome_municipio', models.CharField(blank=True, max_length=60, null=True)),
                ('cep', models.CharField(blank=True, max_length=8, null=True)),
                ('uf', models.CharField(blank=True, max_length=2, null=True)),
                ('codigo_pais', models.CharField(blank=True, default='1058', max_length=4, null=True)),
                ('nome_pais', models.CharField(blank=True, default='BRASIL', max_length=60, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CTeDocumento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chave', models.CharField(db_index=True, max_length=44, unique=True, verbose_name='Chave CT-e')),
                ('versao', models.CharField(max_length=5, verbose_name='Versão Schema')),
                ('xml_original', models.TextField(blank=True, null=True)),
                ('arquivo_xml', models.FileField(blank=True, null=True, upload_to='xml_ctes/', verbose_name='Arquivo XML')),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('processado', models.BooleanField(default=False, help_text='Indica se o XML foi processado e os dados extraídos.')),
                ('modalidade', models.CharField(blank=True, choices=[('CIF', 'CIF'), ('FOB', 'FOB')], db_index=True, max_length=3, null=True, verbose_name='Modalidade Frete')),
            ],
            options={
                'verbose_name': 'CT-e (Documento)',
                'verbose_name_plural': 'CT-e (Documentos)',
                'db_table': 'cte_documento',
                'ordering': ['-identificacao__data_emissao'],
            },
        ),
        migrations.CreateModel(
            name='FaixaKM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_km', models.PositiveIntegerField(unique=True, verbose_name='KM Mínimo')),
                ('max_km', models.PositiveIntegerField(blank=True, help_text='Deixe em branco para a última faixa (sem limite superior)', null=True, verbose_name='KM Máximo')),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor a Pagar (R$)')),
            ],
            options={
                'verbose_name': 'Faixa de KM (Pagamento Próprio)',
                'verbose_name_plural': 'Faixas de KM (Pagamento Próprio)',
                'ordering': ['min_km'],
            },
        ),
        migrations.CreateModel(
            name='MDFeDocumento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chave', models.CharField(db_index=True, max_length=44, unique=True, verbose_name='Chave MDF-e')),
                ('versao', models.CharField(max_length=5, verbose_name='Versão Schema')),
                ('xml_original', models.TextField(blank=True, null=True)),
                ('arquivo_xml', models.FileField(blank=True, null=True, upload_to='xml_mdfes/', verbose_name='Arquivo XML')),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('processado', models.BooleanField(default=False, help_text='Indica se o XML foi processado e os dados extraídos.')),
                ('encerrado', models.BooleanField(db_index=True, default=False, verbose_name='Encerrado')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data Encerramento')),
                ('municipio_encerramento_cod', models.CharField(blank=True, max_length=7, null=True, verbose_name='Código Município Encerramento')),
                ('uf_encerramento', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Encerramento')),
                ('protocolo_encerramento', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Protocolo Encerramento')),
            ],
            options={
                'verbose_name': 'MDF-e (Documento)',
                'verbose_name_plural': 'MDF-e (Documentos)',
                'db_table': 'mdfe_documento',
                'ordering': ['-identificacao__dh_emi'],
            },
        ),
        migrations.CreateModel(
            name='ParametroSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome do Parâmetro')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição')),
                ('valor', models.CharField(max_length=255, verbose_name='Valor')),
                ('grupo', models.CharField(choices=[('GERAL', 'Configurações Gerais'), ('ALERTA', 'Configurações de Alertas'), ('PAGTO', 'Configurações de Pagamentos'), ('EMAIL', 'Configurações de Email'), ('BACKUP', 'Configurações de Backup')], default='GERAL', max_length=10, verbose_name='Grupo')),
                ('tipo_dado', models.CharField(choices=[('int', 'Inteiro'), ('float', 'Decimal'), ('str', 'Texto'), ('bool', 'Booleano'), ('date', 'Data'), ('json', 'JSON')], default='str', max_length=20, verbose_name='Tipo de Dado')),
                ('editavel', models.BooleanField(default=True, verbose_name='Editável')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parâmetro do Sistema',
                'verbose_name_plural': 'Parâmetros do Sistema',
                'ordering': ['grupo', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='RegistroBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('nome_arquivo', models.CharField(max_length=100, verbose_name='Nome do Arquivo')),
                ('tamanho_bytes', models.PositiveBigIntegerField(verbose_name='Tamanho (bytes)')),
                ('md5_hash', models.CharField(max_length=32, verbose_name='Hash MD5')),
                ('localizacao', models.CharField(max_length=255, verbose_name='Localização')),
                ('usuario', models.CharField(max_length=150, verbose_name='Usuário')),
                ('status', models.CharField(choices=[('completo', 'Completo'), ('parcial', 'Parcial'), ('erro', 'Erro')], default='completo', max_length=20, verbose_name='Status')),
                ('detalhes', models.TextField(blank=True, null=True, verbose_name='Detalhes')),
            ],
            options={
                'verbose_name': 'Registro de Backup',
                'verbose_name_plural': 'Registros de Backup',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(db_index=True, max_length=8, unique=True, verbose_name='Placa')),
                ('renavam', models.CharField(blank=True, max_length=11, null=True)),
                ('tara', models.PositiveIntegerField(blank=True, help_text='Peso em ordem de marcha (kg)', null=True)),
                ('capacidade_kg', models.PositiveIntegerField(blank=True, help_text='Capacidade máxima (kg)', null=True)),
                ('capacidade_m3', models.PositiveIntegerField(blank=True, help_text='Capacidade cúbica (m³)', null=True)),
                ('tipo_proprietario', models.CharField(blank=True, help_text='00‑Próprio / 01‑Arrendado / 02‑Agregado …', max_length=2, null=True)),
                ('proprietario_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Proprietário')),
                ('proprietario_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Proprietário')),
                ('proprietario_nome', models.CharField(blank=True, max_length=60, null=True, verbose_name='Razão Social/Nome Proprietário')),
                ('rntrc_proprietario', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC Proprietário')),
                ('uf_proprietario', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Proprietário')),
                ('ativo', models.BooleanField(default=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['placa'],
            },
        ),
        migrations.CreateModel(
            name='CTeComplemento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_carac_ad', models.CharField(blank=True, max_length=15, null=True, verbose_name='Característica Adicional Transporte')),
                ('x_carac_ser', models.CharField(blank=True, max_length=30, null=True, verbose_name='Característica Adicional Serviço')),
                ('x_emi', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Emissor Complementar')),
                ('entrega_sem_data', models.BooleanField(default=False, verbose_name='Entrega sem Data Definida')),
                ('entrega_com_data_d_prev', models.DateField(blank=True, null=True, verbose_name='Data Programada')),
                ('entrega_no_periodo_d_ini', models.DateField(blank=True, null=True, verbose_name='Início Período')),
                ('entrega_no_periodo_d_fin', models.DateField(blank=True, null=True, verbose_name='Fim Período')),
                ('entrega_sem_hora', models.BooleanField(default=False, verbose_name='Entrega sem Hora Definida')),
                ('entrega_com_hora_h_prev', models.TimeField(blank=True, null=True, verbose_name='Hora Programada')),
                ('entrega_no_periodo_h_ini', models.TimeField(blank=True, null=True, verbose_name='Início Horário')),
                ('entrega_no_periodo_h_fin', models.TimeField(blank=True, null=True, verbose_name='Fim Horário')),
                ('orig_cod_mun', models.CharField(blank=True, max_length=7, null=True, verbose_name='Código Município Origem')),
                ('orig_nome_mun', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Município Origem')),
                ('orig_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Origem')),
                ('dest_cod_mun', models.CharField(blank=True, max_length=7, null=True, verbose_name='Código Município Destino')),
                ('dest_nome_mun', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Município Destino')),
                ('dest_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Destino')),
                ('x_obs', models.TextField(blank=True, null=True, verbose_name='Observações Gerais')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='complemento', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Complemento',
                'verbose_name_plural': 'CT-e – Complemento',
                'db_table': 'cte_complemento',
            },
        ),
        migrations.CreateModel(
            name='CTeCarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_carga', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total Mercadorias')),
                ('produto_predominante', models.CharField(max_length=60, verbose_name='Produto Predominante')),
                ('outras_caracteristicas', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outras Características Carga')),
                ('valor_carga_averbada', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Carga Averbada (Seguro)')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='carga', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Carga',
                'verbose_name_plural': 'CT-e – Carga',
                'db_table': 'cte_carga',
            },
        ),
        migrations.CreateModel(
            name='CTeCancelamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_evento', models.CharField(max_length=54, unique=True, verbose_name='ID Evento')),
                ('c_orgao', models.CharField(max_length=2, verbose_name='Código Órgão IBGE')),
                ('tp_amb', models.PositiveSmallIntegerField(verbose_name='Tipo Ambiente')),
                ('cnpj', models.CharField(max_length=14, verbose_name='CNPJ Solicitante')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Solicitante')),
                ('dh_evento', models.DateTimeField(verbose_name='Data/Hora Evento')),
                ('tp_evento', models.CharField(default='110111', max_length=6, verbose_name='Tipo Evento')),
                ('n_seq_evento', models.PositiveSmallIntegerField(default=1, verbose_name='Sequência Evento')),
                ('versao_evento', models.CharField(default='4.00', max_length=5, verbose_name='Versão Evento')),
                ('n_prot_original', models.CharField(max_length=15, verbose_name='Protocolo Autorização Original')),
                ('x_just', models.TextField(verbose_name='Justificativa')),
                ('id_retorno', models.CharField(blank=True, max_length=15, null=True, verbose_name='ID Retorno')),
                ('ver_aplic', models.CharField(blank=True, max_length=20, null=True, verbose_name='Versão Aplicação Resposta')),
                ('c_stat', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Código Status Resposta')),
                ('x_motivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Motivo Status Resposta')),
                ('dh_reg_evento', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora Registro Evento')),
                ('n_prot_retorno', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Protocolo Evento')),
                ('arquivo_xml_evento', models.FileField(blank=True, null=True, upload_to='xml_eventos_cte/', verbose_name='XML Evento Cancelamento')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancelamento', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Cancelamento',
                'verbose_name_plural': 'CT-e – Cancelamentos',
                'db_table': 'cte_cancelamento',
            },
        ),
        migrations.CreateModel(
            name='CTeDocumentoTransportado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(max_length=10, verbose_name='Tipo Documento')),
                ('chave_nfe', models.CharField(blank=True, max_length=44, null=True, verbose_name='Chave NF-e')),
                ('modelo_nf', models.CharField(blank=True, max_length=2, null=True, verbose_name='Modelo NF')),
                ('serie_nf', models.CharField(blank=True, max_length=3, null=True, verbose_name='Série NF')),
                ('numero_nf', models.CharField(blank=True, max_length=9, null=True, verbose_name='Número NF')),
                ('data_emissao_nf', models.DateField(blank=True, null=True, verbose_name='Data Emissão NF')),
                ('bc_icms_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Base ICMS NF')),
                ('valor_icms_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor ICMS NF')),
                ('bc_st_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Base ICMS ST NF')),
                ('valor_st_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor ICMS ST NF')),
                ('valor_produtos_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Produtos NF')),
                ('valor_total_nf', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Total NF')),
                ('cfop_pred_nf', models.CharField(blank=True, max_length=4, null=True, verbose_name='CFOP Predominante NF')),
                ('peso_total_kg_nf', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True, verbose_name='Peso Total (Kg) NF')),
                ('pin_suframa_nf', models.CharField(blank=True, max_length=9, null=True, verbose_name='PIN SUFRAMA NF')),
                ('tipo_doc_outros', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Doc Outros')),
                ('desc_outros', models.CharField(blank=True, max_length=100, null=True, verbose_name='Descrição Outros')),
                ('numero_outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número Outros')),
                ('data_emissao_outros', models.DateField(blank=True, null=True, verbose_name='Data Emissão Outros')),
                ('valor_doc_outros', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Doc Outros')),
                ('cte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_transportados', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Documento Transportado',
                'verbose_name_plural': 'CT-e – Documentos Transportados',
                'db_table': 'cte_doc_transportado',
            },
        ),
        migrations.CreateModel(
            name='CTeIdentificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_uf', models.PositiveSmallIntegerField(verbose_name='Código UF Emitente')),
                ('codigo_control', models.CharField(max_length=8, verbose_name='Código Numérico Chave')),
                ('cfop', models.CharField(max_length=4, verbose_name='CFOP')),
                ('natureza_operacao', models.CharField(max_length=60, verbose_name='Natureza da Operação')),
                ('modelo', models.CharField(max_length=2, verbose_name='Modelo')),
                ('serie', models.PositiveSmallIntegerField(verbose_name='Série')),
                ('numero', models.PositiveIntegerField(verbose_name='Número CT-e')),
                ('data_emissao', models.DateTimeField(db_index=True, verbose_name='Data/Hora Emissão')),
                ('tipo_impressao', models.PositiveSmallIntegerField(verbose_name='Tipo Impressão DACTE')),
                ('tipo_emissao', models.PositiveSmallIntegerField(verbose_name='Tipo Emissão')),
                ('digito_verificador', models.PositiveSmallIntegerField(verbose_name='Dígito Verificador Chave')),
                ('ambiente', models.PositiveSmallIntegerField(verbose_name='Ambiente (1=Prod, 2=Hom)')),
                ('tipo_cte', models.PositiveSmallIntegerField(verbose_name='Tipo CT-e (0=Normal, 1=Compl, 2=Anul, 3=Subst)')),
                ('processo_emissao', models.PositiveSmallIntegerField(verbose_name='Processo Emissão')),
                ('versao_processo', models.CharField(max_length=60, verbose_name='Versão Processo Emissão')),
                ('chave_referenciada', models.CharField(blank=True, max_length=44, null=True, verbose_name='Chave CT-e Referenciada')),
                ('codigo_mun_envio', models.CharField(max_length=7, verbose_name='Código Município Envio')),
                ('nome_mun_envio', models.CharField(max_length=60, verbose_name='Nome Município Envio')),
                ('uf_envio', models.CharField(max_length=2, verbose_name='UF Envio')),
                ('modal', models.CharField(max_length=2, verbose_name='Modal')),
                ('tipo_servico', models.CharField(max_length=1, verbose_name='Tipo Serviço')),
                ('codigo_mun_ini', models.CharField(max_length=7, verbose_name='Código Município Início Prest.')),
                ('nome_mun_ini', models.CharField(max_length=60, verbose_name='Nome Município Início Prest.')),
                ('uf_ini', models.CharField(max_length=2, verbose_name='UF Início Prest.')),
                ('codigo_mun_fim', models.CharField(max_length=7, verbose_name='Código Município Fim Prest.')),
                ('nome_mun_fim', models.CharField(max_length=60, verbose_name='Nome Município Fim Prest.')),
                ('uf_fim', models.CharField(max_length=2, verbose_name='UF Fim Prest.')),
                ('retira', models.BooleanField(default=False, verbose_name='Retira Mercadoria')),
                ('detalhes_retira', models.TextField(blank=True, null=True, verbose_name='Detalhes Retira')),
                ('ind_ie_tomador', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Indicador IE Tomador')),
                ('toma', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Tomador Serviço (0=Rem, 1=Exp, 2=Rec, 3=Dest, 4=Outros)')),
                ('tomador_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Tomador')),
                ('tomador_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Tomador')),
                ('tomador_ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='IE Tomador')),
                ('tomador_razao_social', models.CharField(blank=True, max_length=60, null=True, verbose_name='Razão Social Tomador')),
                ('tomador_nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia Tomador')),
                ('tomador_telefone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Telefone Tomador')),
                ('dist_km', models.PositiveIntegerField(blank=True, null=True, verbose_name='Distância KM')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identificacao', to='transport.ctedocumento')),
                ('tomador_endereco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='transport.endereco')),
            ],
            options={
                'verbose_name': 'CT-e – Identificação',
                'verbose_name_plural': 'CT-e – Identificação',
                'db_table': 'cte_identificacao',
            },
        ),
        migrations.CreateModel(
            name='CTeModalRodoviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rntrc', models.CharField(max_length=8, verbose_name='RNTRC')),
                ('data_prevista_entrega', models.DateField(blank=True, null=True, verbose_name='Data Prevista Entrega')),
                ('lotacao', models.BooleanField(default=False, verbose_name='Indicador Lotação')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='modal_rodoviario', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Modal Rodoviário',
                'verbose_name_plural': 'CT-e – Modal Rodoviário',
                'db_table': 'cte_modal_rodo',
            },
        ),
        migrations.CreateModel(
            name='CTeMotorista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=60, verbose_name='Nome Motorista')),
                ('cpf', models.CharField(max_length=11, verbose_name='CPF Motorista')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motoristas', to='transport.ctemodalrodoviario')),
            ],
            options={
                'verbose_name': 'CT-e – Motorista',
                'verbose_name_plural': 'CT-e – Motorista',
                'db_table': 'cte_motorista',
            },
        ),
        migrations.CreateModel(
            name='CTeObservacaoContribuinte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo', models.CharField(max_length=20, verbose_name='Identificação Campo')),
                ('texto', models.TextField(verbose_name='Conteúdo')),
                ('complemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observacoes_contribuinte', to='transport.ctecomplemento')),
            ],
            options={
                'verbose_name': 'CT-e – Observação Contribuinte',
                'verbose_name_plural': 'CT-e – Observações Contribuinte',
                'db_table': 'cte_obs_contribuinte',
            },
        ),
        migrations.CreateModel(
            name='CTeObservacaoFisco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campo', models.CharField(max_length=20, verbose_name='Identificação Campo')),
                ('texto', models.TextField(verbose_name='Conteúdo')),
                ('complemento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observacoes_fisco', to='transport.ctecomplemento')),
            ],
            options={
                'verbose_name': 'CT-e – Observação Fisco',
                'verbose_name_plural': 'CT-e – Observações Fisco',
                'db_table': 'cte_obs_fisco',
            },
        ),
        migrations.CreateModel(
            name='CTePrestacaoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_total_prestado', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total Prestação')),
                ('valor_recebido', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor a Receber')),
                ('valor_cif', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Frete CIF')),
                ('valor_fob', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Frete FOB')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prestacao', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Prestação do Serviço',
                'verbose_name_plural': 'CT-e – Prestação do Serviço',
                'db_table': 'cte_prestacao',
            },
        ),
        migrations.CreateModel(
            name='CTeComponenteValor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=60, verbose_name='Nome Componente')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Componente')),
                ('prestacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='componentes', to='transport.cteprestacaoservico')),
            ],
            options={
                'verbose_name': 'CT-e – Componente de Valor',
                'verbose_name_plural': 'CT-e – Componente de Valor',
                'db_table': 'cte_comp_valor',
            },
        ),
        migrations.CreateModel(
            name='CTeProtocoloAutorizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ambiente', models.PositiveSmallIntegerField(verbose_name='Ambiente')),
                ('versao_aplic', models.CharField(max_length=30, verbose_name='Versão Aplicação')),
                ('data_recebimento', models.DateTimeField(verbose_name='Data/Hora Recebimento')),
                ('numero_protocolo', models.CharField(max_length=15, unique=True, verbose_name='Número Protocolo')),
                ('digest_value', models.CharField(blank=True, max_length=60, null=True, verbose_name='Digest Value')),
                ('codigo_status', models.PositiveSmallIntegerField(verbose_name='Código Status')),
                ('motivo_status', models.CharField(max_length=255, verbose_name='Motivo Status')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='protocolo', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Protocolo',
                'db_table': 'cte_protocolo',
            },
        ),
        migrations.CreateModel(
            name='CTeQuantidadeCarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_unidade', models.CharField(max_length=2, verbose_name='Código Unidade Medida')),
                ('tipo_medida', models.CharField(max_length=20, verbose_name='Tipo Medida')),
                ('quantidade', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Quantidade')),
                ('carga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quantidades', to='transport.ctecarga')),
            ],
            options={
                'verbose_name': 'CT-e – Quantidade de Carga',
                'verbose_name_plural': 'CT-e – Quantidade de Carga',
                'db_table': 'cte_carga_quantidade',
            },
        ),
        migrations.CreateModel(
            name='CTeResponsavelTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(max_length=14, verbose_name='CNPJ Resp. Técnico')),
                ('contato', models.CharField(max_length=60, verbose_name='Nome Contato')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Contato')),
                ('telefone', models.CharField(max_length=14, verbose_name='Telefone Contato')),
                ('id_csr', models.CharField(blank=True, max_length=3, null=True, verbose_name='ID CSR')),
                ('hash_csr', models.CharField(blank=True, max_length=28, null=True, verbose_name='Hash CSR')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resp_tecnico', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Responsável Técnico',
                'verbose_name_plural': 'CT-e – Responsável Técnico',
                'db_table': 'cte_resp_tec',
            },
        ),
        migrations.CreateModel(
            name='CTeSeguro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.CharField(max_length=1, verbose_name='Responsável Seguro')),
                ('nome_seguradora', models.CharField(max_length=30, verbose_name='Nome Seguradora')),
                ('numero_apolice', models.CharField(max_length=20, verbose_name='Número Apólice')),
                ('numero_averbacao', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número Averbação')),
                ('valor_carga_averbada', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Carga (Averbação)')),
                ('cte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguros', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Seguro',
                'verbose_name_plural': 'CT-e – Seguro',
                'db_table': 'cte_seguro',
            },
        ),
        migrations.CreateModel(
            name='CTeSuplementar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code_url', models.TextField(verbose_name='URL QR Code')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='suplementar', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Suplementar',
                'verbose_name_plural': 'CT-e – Suplementar',
                'db_table': 'cte_suplementar',
            },
        ),
        migrations.CreateModel(
            name='CTeTributos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icms', models.JSONField(blank=True, help_text='Estrutura JSON com os detalhes do ICMS aplicável (CST, vBC, pICMS, vICMS, etc.)', null=True, verbose_name='Detalhes ICMS')),
                ('valor_total_tributos', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Total Tributos')),
                ('info_ad_fisco', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais Fisco')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tributos', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Impostos',
                'verbose_name_plural': 'CT-e – Impostos',
                'db_table': 'cte_tributos',
            },
        ),
        migrations.CreateModel(
            name='CTeVeiculoRodoviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=7, verbose_name='Placa')),
                ('renavam', models.CharField(blank=True, max_length=11, null=True, verbose_name='RENAVAM')),
                ('tara', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tara (Kg)')),
                ('cap_kg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (Kg)')),
                ('cap_m3', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (m³)')),
                ('tipo_proprietario', models.CharField(blank=True, max_length=1, null=True, verbose_name='Tipo Proprietário')),
                ('tipo_veiculo', models.CharField(blank=True, max_length=1, null=True, verbose_name='Tipo Veículo')),
                ('tipo_rodado', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Rodado')),
                ('tipo_carroceria', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Carroceria')),
                ('uf_licenciamento', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Licenciamento')),
                ('prop_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Proprietário')),
                ('prop_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Proprietário')),
                ('prop_rntrc', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC Proprietário')),
                ('prop_razao_social', models.CharField(blank=True, max_length=60, null=True, verbose_name='Razão Social Proprietário')),
                ('prop_ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='IE Proprietário')),
                ('prop_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Proprietário')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='veiculos', to='transport.ctemodalrodoviario')),
            ],
            options={
                'verbose_name': 'CT-e – Veículo Rodoviário',
                'verbose_name_plural': 'CT-e – Veículo Rodoviário',
                'db_table': 'cte_veiculo_rodo',
            },
        ),
        migrations.CreateModel(
            name='MDFeCancelamentoEncerramento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_evento', models.CharField(max_length=54, unique=True, verbose_name='ID Evento')),
                ('c_orgao', models.CharField(max_length=2, verbose_name='Código Órgão IBGE')),
                ('tp_amb', models.PositiveSmallIntegerField(verbose_name='Tipo Ambiente')),
                ('cnpj', models.CharField(max_length=14, verbose_name='CNPJ Solicitante')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Solicitante')),
                ('dh_evento', models.DateTimeField(verbose_name='Data/Hora Evento')),
                ('tp_evento', models.CharField(default='110113', max_length=6, verbose_name='Tipo Evento')),
                ('n_seq_evento', models.PositiveSmallIntegerField(default=1, verbose_name='Sequência Evento')),
                ('versao_evento', models.CharField(default='3.00', max_length=5, verbose_name='Versão Evento')),
                ('n_prot_cancelar', models.CharField(max_length=15, verbose_name='Protocolo Encerramento a Cancelar')),
                ('x_just', models.TextField(verbose_name='Justificativa')),
                ('id_retorno', models.CharField(blank=True, max_length=15, null=True, verbose_name='ID Retorno')),
                ('ver_aplic', models.CharField(blank=True, max_length=20, null=True, verbose_name='Versão Aplicação Resposta')),
                ('c_stat', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Código Status Resposta')),
                ('x_motivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Motivo Status Resposta')),
                ('dh_reg_evento', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora Registro Evento')),
                ('n_prot_retorno', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Protocolo Evento')),
                ('arquivo_xml_evento', models.FileField(blank=True, null=True, upload_to='xml_eventos_mdfe/', verbose_name='XML Evento Canc. Encerramento')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancelamento_encerramento', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Cancelamento de Encerramento',
                'verbose_name_plural': 'MDF-e – Cancelamentos de Encerramento',
                'db_table': 'mdfe_cancelamento_encerramento',
            },
        ),
        migrations.CreateModel(
            name='MDFeCancelamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_evento', models.CharField(max_length=54, unique=True, verbose_name='ID Evento')),
                ('c_orgao', models.CharField(max_length=2, verbose_name='Código Órgão IBGE')),
                ('tp_amb', models.PositiveSmallIntegerField(verbose_name='Tipo Ambiente')),
                ('cnpj', models.CharField(max_length=14, verbose_name='CNPJ Solicitante')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Solicitante')),
                ('dh_evento', models.DateTimeField(verbose_name='Data/Hora Evento')),
                ('tp_evento', models.CharField(default='110111', max_length=6, verbose_name='Tipo Evento')),
                ('n_seq_evento', models.PositiveSmallIntegerField(default=1, verbose_name='Sequência Evento')),
                ('versao_evento', models.CharField(default='3.00', max_length=5, verbose_name='Versão Evento')),
                ('n_prot_original', models.CharField(max_length=15, verbose_name='Protocolo Autorização Original')),
                ('x_just', models.TextField(verbose_name='Justificativa')),
                ('id_retorno', models.CharField(blank=True, max_length=15, null=True, verbose_name='ID Retorno')),
                ('ver_aplic', models.CharField(blank=True, max_length=20, null=True, verbose_name='Versão Aplicação Resposta')),
                ('c_stat', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Código Status Resposta')),
                ('x_motivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Motivo Status Resposta')),
                ('dh_reg_evento', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora Registro Evento')),
                ('n_prot_retorno', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Protocolo Evento')),
                ('arquivo_xml_evento', models.FileField(blank=True, null=True, upload_to='xml_eventos_mdfe/', verbose_name='XML Evento Cancelamento')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancelamento', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Cancelamento',
                'verbose_name_plural': 'MDF-e – Cancelamentos',
                'db_table': 'mdfe_cancelamento',
            },
        ),
        migrations.CreateModel(
            name='MDFeDocumentosVinculados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave_documento', models.CharField(db_index=True, max_length=44, verbose_name='Chave Documento Vinculado')),
                ('seg_cod_barras', models.CharField(blank=True, max_length=36, null=True, verbose_name='Segundo Código Barras (CT-e)')),
                ('ind_reentrega', models.BooleanField(default=False, verbose_name='Indicador Reentrega')),
                ('cte_relacionado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mdfe_transportador', to='transport.ctedocumento', to_field='chave')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs_vinculados_mdfe', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Documento Vinculado',
                'verbose_name_plural': 'MDF-e – Documentos Vinculados',
                'db_table': 'mdfe_documentos_vinculados',
            },
        ),
        migrations.AddField(
            model_name='ctedocumento',
            name='mdfe_vinculado',
            field=models.ManyToManyField(related_name='ctes_transportados', through='transport.MDFeDocumentosVinculados', to='transport.mdfedocumento'),
        ),
        migrations.CreateModel(
            name='MDFeIdentificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_uf', models.PositiveSmallIntegerField(verbose_name='Código UF Emitente')),
                ('tp_amb', models.PositiveSmallIntegerField(verbose_name='Tipo Ambiente')),
                ('tp_emit', models.PositiveSmallIntegerField(verbose_name='Tipo Emitente (1=Prest Serv, 2=Transp Carga Própria)')),
                ('tp_transp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Tipo Transportador (1=ETC, 2=TAC, 3=CTC)')),
                ('mod', models.CharField(max_length=2, verbose_name='Modelo')),
                ('serie', models.PositiveSmallIntegerField(verbose_name='Série')),
                ('n_mdf', models.PositiveIntegerField(verbose_name='Número MDF-e')),
                ('c_mdf', models.CharField(max_length=8, verbose_name='Código Numérico Chave')),
                ('c_dv', models.CharField(max_length=1, verbose_name='Dígito Verificador Chave')),
                ('modal', models.CharField(max_length=1, verbose_name='Modal (1=Rodoviário, 2=Aéreo, 3=Aquaviário, 4=Ferroviário)')),
                ('dh_emi', models.DateTimeField(verbose_name='Data/Hora Emissão')),
                ('tp_emis', models.PositiveSmallIntegerField(verbose_name='Tipo Emissão (1=Normal, 2=Contingência)')),
                ('proc_emi', models.PositiveSmallIntegerField(verbose_name='Processo Emissão')),
                ('ver_proc', models.CharField(max_length=20, verbose_name='Versão Processo Emissão')),
                ('uf_ini', models.CharField(max_length=2, verbose_name='UF Início Viagem')),
                ('uf_fim', models.CharField(max_length=2, verbose_name='UF Fim Viagem')),
                ('dh_ini_viagem', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora Início Viagem')),
                ('ind_carga_posterior', models.BooleanField(default=False, verbose_name='Indicador Carga Posterior')),
                ('ind_canal_verde', models.BooleanField(default=False, verbose_name='Indicador Canal Verde')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identificacao', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Identificação',
                'verbose_name_plural': 'MDF-e – Identificação',
                'db_table': 'mdfe_identificacao',
            },
        ),
        migrations.CreateModel(
            name='MDFeInformacoesAdicionais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inf_ad_fisco', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais Fisco')),
                ('inf_cpl', models.TextField(blank=True, null=True, verbose_name='Informações Complementares')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adicional', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Informações Adicionais',
                'verbose_name_plural': 'MDF-e – Informações Adicionais',
                'db_table': 'mdfe_inf_adic',
            },
        ),
        migrations.CreateModel(
            name='MDFeLacreRodoviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20, verbose_name='Número Lacre')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lacres_rodoviarios', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Lacre Rodoviário',
                'verbose_name_plural': 'MDF-e – Lacres Rodoviários',
                'db_table': 'mdfe_lacre_rodo',
            },
        ),
        migrations.CreateModel(
            name='MDFeModalRodoviario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rntrc', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC')),
                ('codigo_agendamento_porto', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código Agendamento Porto')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='modal_rodoviario', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Modal Rodoviário',
                'verbose_name_plural': 'MDF-e – Modal Rodoviário',
                'db_table': 'mdfe_modal_rodo',
            },
        ),
        migrations.CreateModel(
            name='MDFeContratante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Contratante')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Contratante')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratantes', to='transport.mdfemodalrodoviario')),
            ],
            options={
                'verbose_name': 'MDF-e – Contratante',
                'verbose_name_plural': 'MDF-e – Contratante',
                'db_table': 'mdfe_contratante',
            },
        ),
        migrations.CreateModel(
            name='MDFeCIOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ciot', models.CharField(max_length=12, verbose_name='CIOT')),
                ('cnpj_responsavel', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Responsável')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Responsável')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ciots', to='transport.mdfemodalrodoviario')),
            ],
            options={
                'verbose_name': 'MDF-e – CIOT',
                'verbose_name_plural': 'MDF-e – CIOT',
                'db_table': 'mdfe_ciot',
            },
        ),
        migrations.CreateModel(
            name='MDFeMunicipioCarregamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_mun_carrega', models.CharField(max_length=7, verbose_name='Código Município Carregamento')),
                ('x_mun_carrega', models.CharField(max_length=60, verbose_name='Nome Município Carregamento')),
                ('identificacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipios_carregamento', to='transport.mdfeidentificacao')),
            ],
            options={
                'verbose_name': 'MDF-e – Município Carregamento',
                'verbose_name_plural': 'MDF-e – Município Carregamento',
                'db_table': 'mdfe_municipio_carrega',
            },
        ),
        migrations.CreateModel(
            name='MDFeMunicipioDescarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_mun_descarga', models.CharField(max_length=7, verbose_name='Código Município Descarga')),
                ('x_mun_descarga', models.CharField(max_length=60, verbose_name='Nome Município Descarga')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipios_descarga', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Município Descarga',
                'verbose_name_plural': 'MDF-e – Municípios Descarga',
                'db_table': 'mdfe_municipio_descarga',
            },
        ),
        migrations.AddField(
            model_name='mdfedocumentosvinculados',
            name='municipio_descarga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docs_vinculados_municipio', to='transport.mdfemunicipiodescarga'),
        ),
        migrations.CreateModel(
            name='MDFePercurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uf_per', models.CharField(max_length=2, verbose_name='UF Percurso')),
                ('identificacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='percurso', to='transport.mdfeidentificacao')),
            ],
            options={
                'verbose_name': 'MDF-e – Percurso',
                'verbose_name_plural': 'MDF-e – Percursos',
                'db_table': 'mdfe_percurso',
            },
        ),
        migrations.CreateModel(
            name='MDFeProdutoPerigoso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_onu', models.CharField(max_length=4, verbose_name='Número ONU')),
                ('x_nome_ae', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nome Apropriado Embarque')),
                ('x_cla_risco', models.CharField(blank=True, max_length=40, null=True, verbose_name='Classe Risco')),
                ('gr_emb', models.CharField(blank=True, max_length=6, null=True, verbose_name='Grupo Embalagem')),
                ('q_tot_prod', models.CharField(max_length=20, verbose_name='Quantidade Total Produto')),
                ('q_vol_tipo', models.CharField(blank=True, max_length=60, null=True, verbose_name='Quantidade e Tipo Volumes')),
                ('documento_vinculado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtos_perigosos', to='transport.mdfedocumentosvinculados')),
            ],
            options={
                'verbose_name': 'MDF-e – Produto Perigoso',
                'verbose_name_plural': 'MDF-e – Produtos Perigosos',
                'db_table': 'mdfe_produto_perigoso',
            },
        ),
        migrations.CreateModel(
            name='MDFeProdutoPredominante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tp_carga', models.CharField(max_length=2, verbose_name='Tipo Carga')),
                ('x_prod', models.CharField(max_length=120, verbose_name='Descrição Produto')),
                ('ncm', models.CharField(blank=True, max_length=8, null=True, verbose_name='NCM')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prod_pred', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Produto Predominante',
                'verbose_name_plural': 'MDF-e – Produto Predominante',
                'db_table': 'mdfe_prod_pred',
            },
        ),
        migrations.CreateModel(
            name='MDFeProtocoloAutorizacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ambiente', models.PositiveSmallIntegerField(verbose_name='Ambiente')),
                ('versao_aplic', models.CharField(max_length=30, verbose_name='Versão Aplicação')),
                ('data_recebimento', models.DateTimeField(verbose_name='Data/Hora Recebimento')),
                ('numero_protocolo', models.CharField(max_length=15, unique=True, verbose_name='Número Protocolo')),
                ('digest_value', models.CharField(blank=True, max_length=60, null=True, verbose_name='Digest Value')),
                ('codigo_status', models.PositiveSmallIntegerField(verbose_name='Código Status')),
                ('motivo_status', models.CharField(max_length=255, verbose_name='Motivo Status')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='protocolo', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Protocolo',
                'verbose_name_plural': 'MDF-e – Protocolo',
                'db_table': 'mdfe_protocolo',
            },
        ),
        migrations.CreateModel(
            name='MDFeResponsavelTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(max_length=14, verbose_name='CNPJ Resp. Técnico')),
                ('contato', models.CharField(max_length=60, verbose_name='Nome Contato')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Contato')),
                ('telefone', models.CharField(max_length=14, verbose_name='Telefone Contato')),
                ('id_csr', models.CharField(blank=True, max_length=3, null=True, verbose_name='ID CSR')),
                ('hash_csr', models.CharField(blank=True, max_length=28, null=True, verbose_name='Hash CSR')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resp_tecnico', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Responsável Técnico',
                'verbose_name_plural': 'MDF-e – Responsável Técnico',
                'db_table': 'mdfe_resp_tec',
            },
        ),
        migrations.CreateModel(
            name='MDFeSeguroCarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsavel', models.CharField(max_length=1, verbose_name='Responsável Seguro')),
                ('cnpj_responsavel', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Responsável')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Responsável')),
                ('nome_seguradora', models.CharField(max_length=30, verbose_name='Nome Seguradora')),
                ('cnpj_seguradora', models.CharField(max_length=14, verbose_name='CNPJ Seguradora')),
                ('numero_apolice', models.CharField(max_length=20, verbose_name='Número Apólice')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguros_carga', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Seguro Carga',
                'verbose_name_plural': 'MDF-e – Seguros Carga',
                'db_table': 'mdfe_seguro_carga',
            },
        ),
        migrations.CreateModel(
            name='MDFeAverbacaoSeguro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=40, verbose_name='Número Averbação')),
                ('seguro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='averbacoes', to='transport.mdfesegurocarga')),
            ],
            options={
                'verbose_name': 'MDF-e – Averbação Seguro',
                'verbose_name_plural': 'MDF-e – Averbações Seguro',
                'db_table': 'mdfe_averbacao_seguro',
            },
        ),
        migrations.CreateModel(
            name='MDFeSuplementar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code_url', models.TextField(verbose_name='URL QR Code')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='suplementar', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Suplementar',
                'verbose_name_plural': 'MDF-e – Suplementar',
                'db_table': 'mdfe_suplementar',
            },
        ),
        migrations.CreateModel(
            name='MDFeTotais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q_cte', models.PositiveIntegerField(blank=True, null=True, verbose_name='Qtd. CT-e')),
                ('q_nfe', models.PositiveIntegerField(blank=True, null=True, verbose_name='Qtd. NF-e')),
                ('v_carga', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Total Carga')),
                ('c_unid', models.CharField(max_length=2, verbose_name='Código Unidade Peso Bruto')),
                ('q_carga', models.DecimalField(decimal_places=4, max_digits=15, verbose_name='Peso Bruto Total Carga')),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='totais', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Totais',
                'verbose_name_plural': 'MDF-e – Totais',
                'db_table': 'mdfe_totais',
            },
        ),
        migrations.CreateModel(
            name='MDFeValePedagio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj_fornecedor', models.CharField(max_length=14, verbose_name='CNPJ Fornecedor')),
                ('cnpj_pagador', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Pagador Frete')),
                ('cpf_pagador', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Pagador Frete')),
                ('numero_compra', models.CharField(max_length=20, verbose_name='Número Comprovante Compra')),
                ('valor_vale', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor Vale Pedágio')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vales_pedagio', to='transport.mdfemodalrodoviario')),
            ],
            options={
                'verbose_name': 'MDF-e – Vale Pedágio',
                'verbose_name_plural': 'MDF-e – Vale Pedágio',
                'db_table': 'mdfe_vale_pedagio',
            },
        ),
        migrations.CreateModel(
            name='MDFeVeiculoReboque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=7, verbose_name='Placa')),
                ('renavam', models.CharField(blank=True, max_length=11, null=True, verbose_name='RENAVAM')),
                ('tara', models.PositiveIntegerField(verbose_name='Tara (Kg)')),
                ('cap_kg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (Kg)')),
                ('cap_m3', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (m³)')),
                ('tp_car', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Carroceria')),
                ('uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Licenciamento')),
                ('prop_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Proprietário')),
                ('prop_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Proprietário')),
                ('prop_rntrc', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC Proprietário')),
                ('prop_razao_social', models.CharField(blank=True, max_length=60, null=True, verbose_name='Razão Social Proprietário')),
                ('prop_ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='IE Proprietário')),
                ('prop_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Proprietário')),
                ('prop_tp', models.CharField(blank=True, max_length=1, null=True, verbose_name='Tipo Proprietário')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='veiculos_reboque', to='transport.mdfemodalrodoviario')),
            ],
            options={
                'verbose_name': 'MDF-e – Veículo Reboque',
                'verbose_name_plural': 'MDF-e – Veículo Reboque',
                'db_table': 'mdfe_veiculo_reboque',
            },
        ),
        migrations.CreateModel(
            name='MDFeVeiculoTracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(max_length=7, verbose_name='Placa')),
                ('renavam', models.CharField(blank=True, max_length=11, null=True, verbose_name='RENAVAM')),
                ('tara', models.PositiveIntegerField(verbose_name='Tara (Kg)')),
                ('cap_kg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (Kg)')),
                ('cap_m3', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidade (m³)')),
                ('tp_rod', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Rodado')),
                ('tp_car', models.CharField(blank=True, max_length=2, null=True, verbose_name='Tipo Carroceria')),
                ('uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Licenciamento')),
                ('prop_cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Proprietário')),
                ('prop_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Proprietário')),
                ('prop_rntrc', models.CharField(blank=True, max_length=8, null=True, verbose_name='RNTRC Proprietário')),
                ('prop_razao_social', models.CharField(blank=True, max_length=60, null=True, verbose_name='Razão Social Proprietário')),
                ('prop_ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='IE Proprietário')),
                ('prop_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF Proprietário')),
                ('prop_tp', models.CharField(blank=True, max_length=1, null=True, verbose_name='Tipo Proprietário')),
                ('modal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='veiculo_tracao', to='transport.mdfemodalrodoviario')),
            ],
            options={
                'verbose_name': 'MDF-e – Veículo Tração',
                'verbose_name_plural': 'MDF-e – Veículo Tração',
                'db_table': 'mdfe_veiculo_tracao',
            },
        ),
        migrations.CreateModel(
            name='PagamentoAgregado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa', models.CharField(db_index=True, max_length=8, verbose_name='Placa Veículo')),
                ('condutor_cpf', models.CharField(blank=True, db_index=True, max_length=11, null=True, verbose_name='CPF Condutor')),
                ('condutor_nome', models.CharField(max_length=120, verbose_name='Nome Condutor')),
                ('valor_frete_total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Frete (Base)')),
                ('percentual_repasse', models.DecimalField(decimal_places=2, default=Decimal('25.00'), max_digits=5, verbose_name='Percentual Repasse (%)')),
                ('valor_repassado', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Valor Repasse (R$)')),
                ('obs', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('pago', 'Pago')], db_index=True, default='pendente', max_length=10, verbose_name='Status')),
                ('data_prevista', models.DateField(verbose_name='Data Prevista')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data Pagamento')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pagamento_agregado', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'Pagamento Agregado (CT-e)',
                'verbose_name_plural': 'Pagamentos Agregados (CT-e)',
                'ordering': ['-data_prevista', 'status'],
            },
        ),
        migrations.CreateModel(
            name='PagamentoProprio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(db_index=True, max_length=10, verbose_name='Período (AAAA-MM ou AAAA-MM-XQ)')),
                ('km_total_periodo', models.PositiveIntegerField(default=0, verbose_name='KM Total no Período')),
                ('valor_base_faixa', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Base (Faixa KM)')),
                ('ajustes', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Ajustes/Adicionais (R$)')),
                ('valor_total_pagar', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Valor Total a Pagar (R$)')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('pago', 'Pago')], db_index=True, default='pendente', max_length=10, verbose_name='Status')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data Pagamento')),
                ('obs', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pagamentos_proprios', to='transport.veiculo')),
            ],
            options={
                'verbose_name': 'Pagamento Próprio (Período)',
                'verbose_name_plural': 'Pagamentos Próprios (Período)',
                'ordering': ['-periodo', 'veiculo__placa'],
            },
        ),
        migrations.CreateModel(
            name='ManutencaoVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_servico', models.DateField(verbose_name='Data do Serviço')),
                ('servico_realizado', models.CharField(max_length=120)),
                ('oficina', models.CharField(blank=True, max_length=120, null=True)),
                ('quilometragem', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quilometragem')),
                ('peca_utilizada', models.CharField(blank=True, max_length=120, null=True)),
                ('valor_peca', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('valor_mao_obra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('valor_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('status', models.CharField(choices=[('PAGO', 'Pago'), ('PENDENTE', 'Pendente'), ('AGENDADO', 'Agendado'), ('CANCELADO', 'Cancelado')], default='PENDENTE', max_length=10)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('nota_fiscal', models.CharField(blank=True, max_length=44, null=True, verbose_name='Nota Fiscal Serviço')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='manutencoes', to='transport.veiculo', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Manutenção de Veículo',
                'verbose_name_plural': 'Manutenções de Veículos',
                'ordering': ['-data_servico', '-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='CTEDestinatario',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('isuf', models.CharField(blank=True, max_length=9, null=True, verbose_name='Inscrição SUFRAMA')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='destinatario', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Destinatário',
                'verbose_name_plural': 'CT-e – Destinatário',
                'db_table': 'cte_destinatario',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='CTeEmitente',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('crt', models.CharField(max_length=1, verbose_name='CRT')),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='emitente', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Emitente',
                'verbose_name_plural': 'CT-e – Emitente',
                'db_table': 'cte_emitente',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='CTeExpedidor',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expedidor', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Expedidor',
                'verbose_name_plural': 'CT-e – Expedidor',
                'db_table': 'cte_expedidor',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='CTeRecebedor',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recebedor', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Recebedor',
                'verbose_name_plural': 'CT-e – Recebedor',
                'db_table': 'cte_recebedor',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='CTeRemetente',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('cte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='remetente', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Remetente',
                'verbose_name_plural': 'CT-e – Remetente',
                'db_table': 'cte_remetente',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='MDFeEmitente',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='transport.endereco')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('ie', models.CharField(blank=True, max_length=14, null=True, verbose_name='Inscrição Estadual')),
                ('razao_social', models.CharField(max_length=60, verbose_name='Razão Social/Nome')),
                ('nome_fantasia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Nome Fantasia')),
                ('telefone', models.CharField(blank=True, max_length=14, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mdfe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='emitente', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Emitente',
                'verbose_name_plural': 'MDF-e – Emitente',
                'db_table': 'mdfe_emitente',
            },
            bases=('transport.endereco',),
        ),
        migrations.CreateModel(
            name='CTeAutXML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Autorizado')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Autorizado')),
                ('cte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorizados_xml', to='transport.ctedocumento')),
            ],
            options={
                'verbose_name': 'CT-e – Autorização XML',
                'verbose_name_plural': 'CT-e – Autorização XML',
                'db_table': 'cte_autxml',
                'unique_together': {('cte', 'cnpj', 'cpf')},
            },
        ),
        migrations.CreateModel(
            name='MDFeCondutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=60, verbose_name='Nome Condutor')),
                ('cpf', models.CharField(max_length=11, verbose_name='CPF Condutor')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='condutores', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Condutor',
                'verbose_name_plural': 'MDF-e – Condutor',
                'db_table': 'mdfe_condutor',
                'unique_together': {('mdfe', 'cpf')},
            },
        ),
        migrations.CreateModel(
            name='MDFeAutXML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnpj', models.CharField(blank=True, max_length=14, null=True, verbose_name='CNPJ Autorizado')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF Autorizado')),
                ('mdfe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autorizados_xml', to='transport.mdfedocumento')),
            ],
            options={
                'verbose_name': 'MDF-e – Autorização XML',
                'verbose_name_plural': 'MDF-e – Autorização XML',
                'db_table': 'mdfe_autxml',
                'unique_together': {('mdfe', 'cnpj', 'cpf')},
            },
        ),
        migrations.AddIndex(
            model_name='ctedocumento',
            index=models.Index(fields=['modalidade', 'data_upload'], name='cte_documen_modalid_f421f7_idx'),
        ),
        migrations.AddIndex(
            model_name='ctedocumento',
            index=models.Index(fields=['processado', 'data_upload'], name='cte_documen_process_ed81fd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mdfemunicipiocarregamento',
            unique_together={('identificacao', 'c_mun_carrega')},
        ),
        migrations.AlterUniqueTogether(
            name='mdfemunicipiodescarga',
            unique_together={('mdfe', 'c_mun_descarga')},
        ),
        migrations.AlterUniqueTogether(
            name='mdfedocumentosvinculados',
            unique_together={('mdfe', 'chave_documento')},
        ),
        migrations.AlterUniqueTogether(
            name='mdfepercurso',
            unique_together={('identificacao', 'uf_per')},
        ),
        migrations.AlterUniqueTogether(
            name='pagamentoproprio',
            unique_together={('veiculo', 'periodo')},
        ),
    ]
